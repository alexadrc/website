---
title: "WS16"
author: ""
date: "11/4/2019"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown


```{R}
library(dplyr)
library(MASS)
library(ggplot2)
library(lmtest)

data<-biopsy%>%transmute(clump_thickness=V1,
                         cell_uniformity=V2,
                         marg_adhesion=V4,
                         bland_chromatin=V7,
                         outcome=class,
                         y=as.numeric(outcome)-1)
head(data)


``` 

```{R}
fit<-lm(y~clump_thickness,data=data)
summary(fit)

ggplot(data, aes(clump_thickness,y))+geom_jitter(width=.3,height=0)+geom_smooth(method='lm')


``` 


```{R}
predict(fit,newdata = data.frame(clump_thickness=c(1,10)))


``` 

```{R}
odds<-function(p)p/(1-p)
p<-seq(0,1,by=.1)
cbind(p, odds=odds(p))%>%round(4)


ggplot()+
  stat_function(aes(p),fun=odds,geom="line")+
ylab("odds(p)")+xlab("p")


``` 

```{R}
logit<-function(p)log(odds(p))
cbind(p, odds=odds(p),logit=logit(p))%>%round(4)


ggplot()+stat_function(aes(x=seq(.01,.99,.01)),fun=logit,geom="line")+ylab("g(p)=logit(p)")+xlab("p")
```


```{R}
fit<-glm(y~clump_thickness,data=data,family=binomial(link="logit"))
coeftest(fit)

exp(coef(fit))
``` 


```{R}
#predicted logit (log-odds)
predict(fit, newdata=data.frame(clump_thickness=10), type= "link") 

#predicted probability
predict(fit, newdata=data.frame(clump_thickness=10), type = "response") 


``` 

```{R}
logistic<-function(x){exp(x)/(1+exp(x))}
ggplot()+stat_function(aes(x=c(-6,6)),fun=logistic,geom="line")+xlab("t")+ylab("p( y = 1 )")


data$prob<-predict(fit,type="response") #get predicted probabilities
data$predicted<-ifelse(data$prob>.5,"malignant","benign") #predicted outcomes

ggplot(data, aes(clump_thickness,y))+geom_jitter(aes(color=predicted),width=.3,height=0)+
  stat_smooth(method="glm",method.args=list(family="binomial"),se=F)+ylab("malignancy (0,1)")


data$logit<-predict(fit) #get predicted log-odds
data$outcome<-factor(data$outcome,levels=c("malignant","benign"))
ggplot(data,aes(logit, fill=outcome))+geom_density(alpha=.3)+
  geom_vline(xintercept=0,lty=2)


``` 


```{R}
table(truth=data$outcome, prediction=data$predicted)%>%addmargins


(437+165)/699 # accuracy
165/241 # tpr (sensitivity aka recall)

437/458 # tnr (specificity)
165/186 # ppv (precision)

``` 

```{R}
data<-data%>%mutate(clump_cat=ntile(clump_thickness,3))
data$clump_cat<-factor(data$clump_cat,labels=c("S","M","L"))

fit1<-glm(y~clump_cat, data=data, family=binomial(link="logit"))
summary(fit1)


``` 


```{R}
table(data$y,data$clump_cat)

summary(fit1)


fit2<-glm(y~clump_cat+marg_adhesion, family="binomial", data=data)
coeftest(fit2)


``` 


```{R}
patient1<-data.frame(clump_cat="M",
                     marg_adhesion=6)


``` 


```{R}
predict(fit2, newdata=patient1,type = "response")


```{R}
newdat<-data.frame(marg_adhesion=rep(1:10,3),
                   clump_cat=rep(c("S","M","L"),each=10))
newdat<-cbind(newdat,predict(fit2,newdat,se=T,type="response"))

ggplot(newdat,aes(marg_adhesion,fit,fill=clump_cat))+geom_line()+
  geom_ribbon(aes(ymin=fit-se.fit,ymax=fit+se.fit), alpha=.3)
```

```{R}
summary(fit1)$aic
summary(fit2)$aic


``` 

```{R}
anova(fit1,fit2,test="LRT")


``` 

# Try it!

```{R}
gradsch<- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
gradsch$rank <- factor(gradsch$rank) #make rank a factor


``` 


```{R}
prob<-predict(fit3,type="response") #get predictions for every student in the dataset
pred<-ifelse(prob>.5,1,0)
table(prediction=pred, truth=gradsch$admit)%>%addmargins


```

#Extensions

```{R}
library(MASS)
mtcars$cyl<-factor(mtcars$cyl)
ord_fit<-polr(cyl~hp,data=mtcars)
coeftest(ord_fit)

``` 


```{R}
library(nnet) #install.packages("nnet")
multi_fit<-multinom(clump_cat~marg_adhesion,data=data)
exp(coef(multi_fit))

#pvalues if you want (both very significant)
#z<-summary(multi_fit)$coefficients/summary(multi_fit)$standard.errors
#(1-pnorm(z))[,2]*2

